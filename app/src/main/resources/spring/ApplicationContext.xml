<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 我们可以在其中添加我们所需要配置的bean，也可以添加相应的数据库连接和事务处理等等，方便后续拓展
           -->

    <!--数据库连接配置文件-->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:db/db.properties</value>
            </list>
        </property>
    </bean>

    <!--微信配置文件-->
    <!--<bean id="wechatProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:wechat.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!-- 允许JVM参数覆盖 -->
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <!-- 忽略没有找到的资源文件 -->
        <property name="ignoreResourceNotFound" value="true" />
        <!-- 配置资源文件 -->
        <property name="properties" ref="configProperties" />
    </bean>



    <bean id="writeDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${write.jdbc.driver}" />
        <property name="url" value="${write.jdbc.url}" />
        <property name="username" value="${write.jdbc.username}" />
        <property name="password" value="${write.jdbc.password}" />
        <property name="maxActive" value="30" />
        <property name="maxIdle" value="5" />
    </bean>

    <bean id="readDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${read.jdbc.driver}" />
        <property name="url" value="${read.jdbc.url}" />
        <property name="username" value="${read.jdbc.username}" />
        <property name="password" value="${read.jdbc.password}" />
        <property name="maxActive" value="30" />
        <property name="maxIdle" value="5" />
    </bean>

    <bean id="dataSource" class="com.steven.mysql.datasource.DynamicDataSource">
        <property name="writeDataSource" ref="writeDataSource" />
        <property name="readDataSource" ref="readDataSource" />

    </bean>


    <!-- mybatis配置begin-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
        <!--<property name="mapperLocations" value="classpath:com/steven/mysql/Mapper/xml/*Mapper.xml" />-->
        <!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。
        *是个通配符，代表所有的文件，**代表所有目录下 -->
        <!--<property name="mapperLocations" value="classpath:com/steven/mysql/Mapper/xml/*.xml" />-->
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.steven.mysql.Mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <context:component-scan
            base-package="com.steven.mysql" />

</beans>